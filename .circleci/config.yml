---
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers
         environment:
           PGHOST: 127.0.0.1
           PGUSER: ubuntu
           RAILS_ENV: test
           RACK_ENV: test
       - image: circleci/postgres:10.5-alpine-ram
         environment:
           POSTGRES_USER: ubuntu
           POSTGRES_DB: cp-dashboard_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restore ruby cache
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - restore_cache:
          name: Restore yarn cache
          keys:
          - v1-yarn-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-yarn-dependencies-

      - run:
          name: install ruby dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: install postgres client (for structure.sql)
          command: |
            wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
            sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
            sudo apt-get update
            sudo apt install postgresql-client


      - run:
          name: install yarn dependencies
          command: |
            yarn install

      - save_cache:
          name: Save ruby cache
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - save_cache:
          name: Save yarn cache
          paths:
            - ./node_modules
          key: v1-yarn-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      # Database setup
      - run:
          name: Setup DB
          command: |
            bundle exec rake db:create
            bundle exec rake db:structure:load
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/etf-basket_test"

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
